// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Pomodoro.DAL;

namespace Pomodoro.DAL.Migrations
{
    [DbContext(typeof(PomodoroDbContext))]
    [Migration("20200913172142_changeForeignKey")]
    partial class changeForeignKey
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Pomodoro.DAL.Models.Pomodoro.PomodoroSettings", b =>
                {
                    b.Property<int>("SettingsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BreakDuration")
                        .HasColumnType("int");

                    b.Property<int>("PomodoroDuration")
                        .HasColumnType("int");

                    b.Property<int>("PomodoroUserId")
                        .HasColumnType("int");

                    b.HasKey("SettingsId");

                    b.HasIndex("PomodoroUserId");

                    b.ToTable("PomodoroSettings");
                });

            modelBuilder.Entity("Pomodoro.DAL.Models.Pomodoro.PomodoroStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("PomodoroStatus");
                });

            modelBuilder.Entity("Pomodoro.DAL.Models.Pomodoro.PomodoroType", b =>
                {
                    b.Property<int>("TypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("PomodoroUserId")
                        .HasColumnType("int");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TypeId");

                    b.HasIndex("PomodoroUserId");

                    b.ToTable("PomodoroType");
                });

            modelBuilder.Entity("Pomodoro.DAL.Models.Pomodoro.Pomodoros", b =>
                {
                    b.Property<int>("PomodoroId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BreakDuration")
                        .HasColumnType("int");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PomodoroDuration")
                        .HasColumnType("int");

                    b.Property<int?>("PomodoroStatusId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<int>("PomodoroTypeId")
                        .HasColumnType("int");

                    b.Property<int>("PomodoroUserId")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("PomodoroId");

                    b.HasIndex("PomodoroStatusId");

                    b.HasIndex("PomodoroTypeId");

                    b.HasIndex("PomodoroUserId");

                    b.ToTable("Pomodoros");
                });

            modelBuilder.Entity("Pomodoro.DAL.Models.Users.PomodoroUser", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Firstname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Lastname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.ToTable("PomodoroUser");
                });

            modelBuilder.Entity("Pomodoro.DAL.Models.Pomodoro.PomodoroSettings", b =>
                {
                    b.HasOne("Pomodoro.DAL.Models.Users.PomodoroUser", "PomodoroUser")
                        .WithMany()
                        .HasForeignKey("PomodoroUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Pomodoro.DAL.Models.Pomodoro.PomodoroType", b =>
                {
                    b.HasOne("Pomodoro.DAL.Models.Users.PomodoroUser", "PomodoroUser")
                        .WithMany()
                        .HasForeignKey("PomodoroUserId")
                        .OnDelete(DeleteBehavior.NoAction);
                });

            modelBuilder.Entity("Pomodoro.DAL.Models.Pomodoro.Pomodoros", b =>
                {
                    b.HasOne("Pomodoro.DAL.Models.Pomodoro.PomodoroStatus", "PomodoroStatus")
                        .WithMany()
                        .HasForeignKey("PomodoroStatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Pomodoro.DAL.Models.Pomodoro.PomodoroType", "PomodoroType")
                        .WithMany()
                        .HasForeignKey("PomodoroTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Pomodoro.DAL.Models.Users.PomodoroUser", "PomodoroUser")
                        .WithMany()
                        .HasForeignKey("PomodoroUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
